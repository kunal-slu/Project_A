[project]
name = "pyspark-interview-project"
version = "0.1.0"
requires-python = ">=3.10"
description = "Cross-cloud PySpark ETL with Delta and DQ"
readme = "README.md"
authors = [
    {name = "Data Engineering Team", email = "data-eng@company.com"}
]
license = {text = "MIT"}
keywords = ["pyspark", "delta", "etl", "data-engineering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pyspark==3.5.1",
    "delta-spark==3.2.0",
    "pyyaml>=6.0",
    "pydantic>=2.7",
    "rich>=13.7",
    "tenacity>=9.0",
    "requests>=2.32",
    "structlog>=23.0",
    "click>=8.0",
    "python-dotenv>=1.0",
    "prometheus-client>=0.17",
]

[project.optional-dependencies]
aws = [
    "boto3>=1.34",
    "botocore>=1.34",
    "apache-airflow-providers-amazon>=8.0",
]
azure = [
    "azure-identity>=1.17",
    "azure-storage-blob>=12.20",
    "azure-keyvault-secrets>=4.7",
    "azure-eventhub>=5.11",
    "apache-airflow-providers-microsoft-azure>=6.0",
]
test = [
    "pytest>=8.2",
    "pytest-xdist>=3.6",
    "pytest-cov>=5.0",
    "pytest-mock>=3.12",
    "mypy>=1.10",
    "ruff>=0.5",
    "black>=24.0",
    "isort>=5.13",
    "flake8>=7.0",
    "bandit>=1.7",
    "detect-secrets>=1.5",
]
dev = [
    "ipython>=8.0",
    "jupyter>=1.0",
    "notebook>=7.0",
    "memory-profiler>=0.61",
    "line-profiler>=4.1",
]

[project.scripts]
pdi = "pyspark_interview_project.__main__:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyspark.*",
    "delta.*",
    "azure.*",
    "boto3.*",
    "botocore.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
